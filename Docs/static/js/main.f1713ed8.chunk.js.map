{"version":3,"sources":["assets/Section1/shid_logo.svg","assets/Section1/ITN.svg","assets/Section1/GC2.svg","assets/Section2Slider/sl1_1.jpg","assets/Section2Slider/sl1_2.jpg","assets/Section2Slider/sl1_3.jpg","assets/Section2Slider/sl2_1.jpg","assets/Section2Slider/sl2_2.jpg","assets/Section4Sector/1_Industry.jpg","assets/Section4Sector/2_Transport.jpg","assets/Section4Sector/3_Sity_planing.jpg","assets/Section4Sector/4_Energy.jpg","assets/Section4Sector/5_Energetic.jpg","assets/Section4Sector/6_Utilization.jpg","components/HeroBlock/HeroBlock.js","components/Facts/SlideFacts.js","components/Facts/Facts.js","components/SectorList/SectorItem.js","components/SectorList/SectorList.js","components/AirQuality/AirQuality.js","components/Footer/Footer.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","HeroBlock","links","logos","title","logosImages","map","logoItem","i","src","alt","className","key","navItems","link","href","id","SlideFacts","item","imgUrl","desc","SwiperCore","use","Navigation","Pagination","Facts","factsSliders","slides","slideInfo","navigation","nextEl","prevEl","pagination","el","clickable","renderBullet","index","slidesPerView","centeredSlides","spaceBetween","loop","loopFillGroupWithBlank","SectorItem","sector","number","useState","isToolTipShowing","setToolTipShowing","isDirectionSwitched","setDirectionSwitched","toggleToolTip","newValue","onMouseEnter","onMouseLeave","style","background","backgroundSize","name","description","SectorList","subtitle","itemsList","items","mapboxgl","accessToken","AirQuality","mapContainer","useRef","lng","lat","zoom","locationInfo","useEffect","Map","container","current","center","ref","Footer","partners","partnersLogos","logo","navLinks","App","logoShid","logoITN","logoGlobal","factsSlider","require","sectors","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.f1713ed8.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/shid_logo.341a487c.svg\";","module.exports = __webpack_public_path__ + \"static/media/ITN.2f311a05.svg\";","module.exports = __webpack_public_path__ + \"static/media/GC2.0662d9de.svg\";","module.exports = __webpack_public_path__ + \"static/media/sl1_1.6c96001b.jpg\";","module.exports = __webpack_public_path__ + \"static/media/sl1_2.3714e74c.jpg\";","module.exports = __webpack_public_path__ + \"static/media/sl1_3.ac7d0551.jpg\";","module.exports = __webpack_public_path__ + \"static/media/sl2_1.fc7b7da7.jpg\";","module.exports = __webpack_public_path__ + \"static/media/sl2_2.fea4b06b.jpg\";","module.exports = __webpack_public_path__ + \"static/media/1_Industry.3d66b58c.jpg\";","module.exports = __webpack_public_path__ + \"static/media/2_Transport.c1a646f2.jpg\";","module.exports = __webpack_public_path__ + \"static/media/3_Sity_planing.0c1cd297.jpg\";","module.exports = __webpack_public_path__ + \"static/media/4_Energy.13a2dd74.jpg\";","module.exports = __webpack_public_path__ + \"static/media/5_Energetic.7e7ca063.jpg\";","module.exports = __webpack_public_path__ + \"static/media/6_Utilization.12a9d870.jpg\";","import React from 'react';\r\nimport './HeroBlock.scss'\r\n\r\nconst HeroBlock = ({links, logos, title}) => {\r\n    const logosImages=logos.map((logoItem, i) => <img src={logoItem} alt=\"partner-logo\" className=\"hero-partners-item\" key={i}/>);\r\n    const navItems=links.map((link, i) => <a href={link.href} className=\"hero-navigation-item\" key={i}>{link.title}</a>)\r\n    \r\n\r\n    return (\r\n        <section className=\"hero\">\r\n        <div className='container'>\r\n            <div className='hero-partners'>\r\n                {logosImages}\r\n            </div>\r\n            <nav className='hero-navigation'>\r\n                {navItems}\r\n            </nav>\r\n            <h1 className='hero-title' id=\"hero\">{title}</h1>\r\n            <a href=\"#hero\" className=\"hero-link\">Отследить</a>\r\n        </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default HeroBlock\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\n\r\nconst SlideFacts = ({item}) => {\r\n    return (\r\n        <div className=\"facts-slide\">\r\n            <img src={item.imgUrl} alt=\"slide facts\"/>\r\n            <p className=\"facts-slide-desc\">\r\n                {item.desc}\r\n            </p>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SlideFacts;\r\n","import React from 'react';\r\nimport SlideFacts from \"./SlideFacts\";\r\nimport SwiperCore, {Navigation, Pagination} from 'swiper';\r\nimport {Swiper, SwiperSlide} from 'swiper/react';\r\nimport 'swiper/swiper.scss';\r\nimport './facts.scss';\r\nimport 'swiper/components/navigation/navigation.scss';\r\nimport 'swiper/components/pagination/pagination.scss';\r\n\r\nSwiperCore.use([Navigation, Pagination])\r\n\r\nconst Facts = ({title, slides}) => {\r\n    const factsSliders=slides.map((slideInfo) => <SwiperSlide key={slideInfo.id}>\r\n    <SlideFacts item={slideInfo} />\r\n    </SwiperSlide>);\r\n\r\n    return (\r\n        <section className=\"facts container\">\r\n            <h2 id=\"facts\" className=\"facts-title\">{title}</h2>\r\n            <div className=\"swiper-button-prev\"/>\r\n            <Swiper\r\n            navigation={{\r\n                nextEl: '.swiper-button-next',\r\n                prevEl: '.swiper-button-prev',\r\n            }}\r\n            pagination={{\r\n                el: '.facts-pagination',\r\n                clickable: true,\r\n                renderBullet: function (index, className){\r\n                    return `<span class=\"facts-pagination-bullet ${className}\"></span>`;\r\n                },\r\n            }}\r\n            slidesPerView={3}\r\n            centeredSlides={true}\r\n            spaceBetween={40}\r\n            loop={true}\r\n            loopFillGroupWithBlank={true}\r\n            >\r\n                {factsSliders}\r\n            </Swiper>\r\n            <div className=\"swiper-button-next\"/>\r\n            <div className=\"facts-pagination\"/>\r\n        </section>\r\n    );\r\n};\r\n\r\nexport default Facts;\r\n","import React, {useState} from 'react'\r\n\r\nconst SectorItem = ({sector, number}) => {\r\n    const [isToolTipShowing, setToolTipShowing] = useState (false);\r\n    const [isDirectionSwitched, setDirectionSwitched] = useState(false)\r\n    const toggleToolTip = (newValue) => {\r\n        setDirectionSwitched(number % 3 === 0);\r\n        setToolTipShowing(newValue);\r\n        }\r\n    //const toggleToolTip = () => {\r\n    //   setToolTipShowing (\r\n    //   !isToolTipShowing\r\n    // )\r\n    //}\r\n\r\n    return (\r\n        <div className=\"sectors-list-item\"\r\n        //onClick={toggleToolTip}\r\n        onMouseEnter={() => toggleToolTip(true)}\r\n        onMouseLeave={() => toggleToolTip(false)}\r\n        style={{\r\n        background: `url(${sector.imgUrl}) center no-repeat`,\r\n        backgroundSize: 'cover'\r\n    }}>\r\n        <p className=\"sectors-list-item-name\">\r\n            {sector.name}\r\n        </p>\r\n        {\r\n        isToolTipShowing && <p className={`sectors-list-item-tooltip ${\r\n            isDirectionSwitched \r\n            ? \"sectors-list-item-tooltip-switched\"\r\n            : \"\"\r\n        }`}>\r\n            {sector.description}\r\n        </p>\r\n        }\r\n    </div>\r\n    );\r\n};\r\n\r\nexport default SectorItem;\r\n","import React from 'react';\r\nimport './SectorList.scss';\r\nimport SectorItem from './SectorItem';\r\n\r\nconst SectorList = ({title, subtitle, items}) => {\r\n    const itemsList = items.map((sector, i) => <SectorItem sector={sector} number={i+1} key={i}/>)\r\n\r\n    return (\r\n        <section className=\"sectors container\">\r\n            <h2 id=\"politics\" className=\"sectors-title\">{title}</h2>\r\n            <p className=\"sectors-subtitle\">{subtitle}</p>\r\n            <div className=\"sectors-list\">\r\n                 {itemsList}\r\n            </div>\r\n        </section>\r\n    );\r\n};\r\n\r\nexport default SectorList;\r\n","import React, {useEffect, useRef, useState} from 'react';\r\nimport mapboxgl from 'mapbox-gl';\r\nimport 'mapbox-gl/dist/mapbox-gl.css';\r\nimport './AirQuality.scss';\r\n\r\nmapboxgl.accessToken = 'pk.eyJ1IjoibmVsbHlhZm90IiwiYSI6ImNrZm82eWhrNjBobzkyem9lZXRjb3ZqdTYifQ.J67NP-89bVlu-FbHC6BDjQ';\r\n\r\nconst AirQuality = () => {\r\n    const mapContainer = useRef(null);\r\n    const [locationInfo] = useState({\r\n        lng: 33,\r\n        lat: 49,\r\n        zoom: 4.7\r\n    });\r\n\r\n    useEffect( () => {\r\n          new mapboxgl.Map({\r\n          container: mapContainer.current,\r\n          style: 'mapbox://styles/mapbox/outdoors-v11',\r\n          center: [locationInfo.lng, locationInfo.lat],\r\n          zoom: locationInfo.zoom\r\n          });\r\n         })\r\n\r\n    return (\r\n        <section className={'air-q container'}>\r\n            <h2 id=\"quality\" className=\"air-q-title\">Индекс качества воздуха в режиме реального времени</h2>\r\n            <div className=\"air-q-map\" ref={mapContainer}/>\r\n            <p className=\"air-q-text\">Для того чтобы узнать уровень загрязнения атмосферного воздуха (качество воздуха) в городе Киев, необходимо выбрать соответствующую станцию мониторинга на карте выше.</p>\r\n        </section>\r\n    );\r\n};\r\n\r\nexport default AirQuality;\r\n","import React from 'react';\r\nimport './Footer.scss';\r\n\r\nconst Footer = ({partners, links}) => {\r\n    const partnersLogos = partners.map((logo, i) => <img key={i} src={logo} alt={'partner logo'} className=\"footer-partners-item\"/>);\r\nconst navLinks = links.map((link, i) => <a href={link.href} key={i} className={'footer-nav-link'}>{link.title}</a>)\r\n    return (\r\n        <footer className=\"footer\">\r\n            <div className=\"container\">\r\n                <div className=\"footer-partners\">\r\n                    {partnersLogos}\r\n                </div>\r\n                <div className=\"footer-text-wrap\">\r\n                    <div className=\"footer-nav\">\r\n                        {navLinks}\r\n                    </div>\r\n                    <p className=\"footer-nav-text\">\r\n                        Сайт был разработан <span className=\"text-yellow\">Нелей Фотиной</span> (преподаватель <span className=\"text-yellow\">Никита Ямник</span>) в учебных целях рамках образовательной программы IT nation.<br/>Дизайн сайта создан <span className=\"text-yellow\">Валерией Бубырь</span>.\r\n                    </p>\r\n                </div>\r\n                <p className=\"footer-text\">\r\n                    2020, Все права защищены\r\n                </p>\r\n                <p className=\"footer-text\">\r\n                    Согласие на обработку персональных данных<br/>\r\n                    Политика конфиденциальности\r\n                </p>\r\n            </div>\r\n        </footer>\r\n    );\r\n};\r\n\r\nexport default Footer;\r\n","import React from 'react';\nimport './App.scss';\nimport HeroBlock from './components/HeroBlock/HeroBlock';\nimport Facts from './components/Facts/Facts';\nimport SectorList from './components/SectorList/SectorList';\nimport AirQuality from './components/AirQuality/AirQuality';\nimport Footer from './components/Footer/Footer';\nimport logoShid from './assets/Section1/shid_logo.svg';\nimport logoITN from './assets/Section1/ITN.svg';\nimport logoGlobal from './assets/Section1/GC2.svg';\n\n\n\n\nfunction App() {\n  \n  const partners = [\n    logoShid,\n    logoITN,\n    logoGlobal\n  ];\n  const navLinks =  [\n  {\n    title: \"Основные факты\",\n    href: \"#facts\"\n  },\n  {\n    title: \"Индекс качества воздуха\",\n    href: \"#quality\"\n  },\n  {\n    title: \"Политика по уменьшению загрязнений\",\n    href: \"#politics\"\n  }\n  ];\n  const factsSlider = [\n    {\n      id: '21',\n      imgUrl: require(\"./assets/Section2Slider/sl1_1.jpg\"),\n      desc: \"Женщины и дети – главные жертвы загрязнения воздуха\"\n    },\n    {\n      id: '22',\n      imgUrl: require(\"./assets/Section2Slider/sl1_2.jpg\"),\n      desc: \"Защитники окружающей среды подвергаются преследованиям\"\n    },\n    {\n      id: '23',\n      imgUrl: require(\"./assets/Section2Slider/sl1_3.jpg\"),\n      desc: \"Загрязнение воздуха – нарушение прав человека\"\n    },\n    {\n      id: '24',\n      imgUrl: require(\"./assets/Section2Slider/sl2_1.jpg\"),\n      desc: \"4,2 миллиона случаев преждевременной смерти людей из-за загрязнения атмосферного воздуха\"\n    },\n    {\n      id: '25',\n      imgUrl: require(\"./assets/Section2Slider/sl2_2.jpg\"),\n      desc: \"Согласно оценкам, суммарный объем затрат в связи с загрязнением воздуха превышает 5 трлн долл. в год.\"\n    },\n  ];\n  const sectors = [\n    {\n      name:\"Промышленность\",\n      imgUrl: require(\"./assets/Section4Sector/1_Industry.jpg\"),\n      description: \"Чистые технологии, способствующие уменьшению выбросов из промышленных дымовых труб; улучшенная утилизация городских и сельскохозяйственных отходов, включая каптаж (улавливание) метана, выделяемого в местах утилизации отходов, в качестве варианта, альтернативного сжиганию (для использования в качестве биогаза)\"\n    },\n    {\n      name:\"Транспорт\",\n      imgUrl: require(\"./assets/Section4Sector/2_Transport.jpg\"),\n      description: \"Переход к чистым способам выработки энергии; уделение приоритетного внимания скоростному городскому транспорту, пешеходным и велосипедным сетям в городах, а также железнодорожным междугородным грузовым и пассажирским перевозкам; переход к использованию более чистых большегрузных дизельных транспортных средств и автомобилей с низким уровнем выбросов, а также более чистых видов топлива, включая топливо со сниженной концентрацией серы\"\n    },\n    {\n      name:\"Городское планирование\",\n      imgUrl: require(\"./assets/Section4Sector/3_Sity_planing.jpg\"),\n      description: \"Есть много примеров успешной политики по уменьшению загрязнения воздуха в таких секторах, как транспорт, городское планирование, энергетика и промышленность:\"\n    },\n    {\n      name:\"Энергия\",\n      imgUrl: require(\"./assets/Section4Sector/4_Energy.jpg\"),\n      description: \"Обеспечение доступа к недорогостоящим источникам энергии в быту для приготовления пищи, отопления и освещения\"\n    },\n    {\n      name:\"Энергетика\",\n      imgUrl: require(\"./assets/Section4Sector/5_Energetic.jpg\"),\n      description: \" Более широкое использование видов топлива с низким уровнем выбросов и возобновляемых источников энергии, не основанных на сжигании (таких как энергия солнца, ветра или гидроэнергия); комбинированная выработка тепла и энергии; и распределенная выработка энергии (например, энергетические минисистемы и размещаемые на крыше установки для выработки энергии из солнечной энергии)\"\n    },\n    {\n      name:\"Утилизация отходов\",\n      imgUrl: require(\"./assets/Section4Sector/6_Utilization.jpg\"),\n      description: \"стратегии уменьшения отходов, сортировки отходов, рециклирования, повторного использования или переработки отходов; а также улучшенные методы биологической утилизации отходов, такие как анаэробная переработка отходов для производства биогаза, являются практически осуществимыми, недорогими альтернативными вариантами открытому сжиганию твердых отходов\"\n    }\n  ];\n\n  return (\n    <>\n    <HeroBlock title=\"Качество атмосферного воздуха и здоровье\"\n                logos={partners}\n                links={navLinks}/>\n    <Facts title=\"Основные факты\" slides={factsSlider} />\n    <AirQuality/>   \n    <SectorList title=\"Политика по уменьшению загрязнений\"\n                  subtitle=\"Есть много примеров успешной политики по уменьшению загрязнения воздуха в таких секторах, как транспорт, городское планирование, энергетика и промышленность:\"\n                  items={sectors}/>\n    <Footer links={navLinks} partners={partners}/>\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}